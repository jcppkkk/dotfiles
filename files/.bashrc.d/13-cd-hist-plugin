#!/bin/bash

export cdhist_file="$HOME/.cd_history"

touch "$cdhist_file"

IFS=:
if [[ ! ":${chpwd_functions[*]}:" =~ :append_cdhist: ]]; then
    chpwd_functions+=(append_cdhist)
fi
unset IFS

# build sed args to reverse path to home links
readarray -t home_links < <(find ~/ -maxdepth 1 -type l -xtype d -print)
sed_args=()
for link in "${home_links[@]}"; do
    target=$(readlink "$link")
    sed_args+=(-e "s@^$target@$link@")
done

append_cdhist() {
    echo "$PWD" | sed "${sed_args[@]}" -e "s@^$HOME@~@" >>"$cdhist_file"
}

cleanup_cdhist() {
    # prepare old and filtered history files
    cdhist_file_old="${cdhist_file}.old"
    cdhist_file_filtered="${cdhist_file}.filtered"
    cp "$cdhist_file" "$cdhist_file_old"

    # remove duplicates and non-existing directories
    sed "${sed_args[@]}" -e "s@^$HOME@~@" "$cdhist_file_old" \
        | awk '!x[$0]++' \
        | while read -r line; do timeout 0.5 test -d "${line/#\~/$HOME}" && echo "$line"; done >"$cdhist_file_filtered"

    # append new paths added since the old history file
    comm -13 <(sort "$cdhist_file_old") <(sort "$cdhist_file") >>"$cdhist_file_filtered"
    mv -f "$cdhist_file_filtered" "$cdhist_file"
    rm -f "$cdhist_file_old"
}

cd_widget() {
    # quick dedup filtering on load
    cd_target="$(tac "$cdhist_file" | awk '!x[$0]++' | tac | percol --prompt-bottom --result-bottom-up --reverse)"
    if ((${#cd_target} != 0)); then
        # shellcheck disable=SC2164
        cd "${cd_target/#\~/$HOME}"
    fi

    # cleanup history in background
    (cleanup_cdhist &)
}

# if this is interactive shell, then bind hstr to Alt-s (for Vi mode check doc)
if [[ $- =~ .*i.* ]]; then bind -x '"\es": "cd_widget"'; fi
