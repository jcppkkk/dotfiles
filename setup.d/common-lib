#!/bin/bash
# shellcheck shell=bash
# vim: set et fenc=utf-8 ff=unix sts=4 sw=4 ts=8 :

function clean_up() {
    :
}

function errexit() {
    local err=$?
    set +o xtrace
    local code="${1:-1}"
    echo "Error in ${BASH_SOURCE[1]}:${BASH_LINENO[0]}. '${BASH_COMMAND}' exited with status $err"
    # Print out the stack trace described by $function_stack
    if [ ${#FUNCNAME[@]} -gt 2 ]; then
        echo "Call tree:"
        for ((i = 1; i < ${#FUNCNAME[@]} - 1; i++)); do
            echo " $i: ${BASH_SOURCE[$i + 1]}:${BASH_LINENO[$i]} ${FUNCNAME[$i]}(...)"
        done
    fi
    echo "Exiting with status ${code}"
    clean_up
    exit "${code}"
}

# 定義顏色
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

pass() {
    echo -e "${GREEN}[PASS]${NC} $1"
}

change() {
    echo -e "${YELLOW}[CHANGE]${NC} $1"
}

fail() {
    echo -e "${RED}[FAIL]${NC} $1"
}

source /etc/lsb-release
if [[ $DISTRIB_ID = LinuxMint ]] && [[ -f /etc/upstream-release/lsb-release ]]; then
    # for Linux Mint, we treat it as Ubuntu
    source /etc/upstream-release/lsb-release
fi

case $(uname) in
    Linux)
        platform='linux'
        ;;
    FreeBSD)
        platform='freebsd'
        ;;
    Darwin)
        platform='mac'
        ;;
    *)
        # shellcheck disable=SC2034
        platform='unknown'
        ;;
esac

ubuntu_apt_update() {
    if [[ -f /etc/apt/sources.list.d/official-package-repositories.list ]]; then
        sudo sed -i -e 's/archive.ubuntu.com\|security.ubuntu.com/free.nchc.org.tw/' /etc/apt/sources.list.d/official-package-repositories.list
    fi
    if [[ -f /etc/apt/sources.list ]]; then
        sudo sed -i -e 's/archive.ubuntu.com\|security.ubuntu.com/free.nchc.org.tw/' /etc/apt/sources.list
    fi
    LOG_FILE="/var/log/apt/history.log"
    if [[ ! -f "$LOG_FILE" ]]; then
        return
    fi
    LAST_UPDATE=$(grep -m 1 "Start-Date" "$LOG_FILE" | awk '{print $2, $3}')
    if [[ -n "$LAST_UPDATE" ]]; then
        LAST_UPDATE_TIMESTAMP=$(date -d "$LAST_UPDATE" +%s)
        CURRENT_TIMESTAMP=$(date +%s)
        SECONDS_SINCE_LAST_UPDATE=$((CURRENT_TIMESTAMP - LAST_UPDATE_TIMESTAMP))
        if [[ $SECONDS_SINCE_LAST_UPDATE -lt 86400 ]]; then
            pass "距離上次 apt update 不到一天，無需執行。"
            return
        fi
    fi
    sudo apt update
}

# trap ERR to provide an error handler whenever a command exits nonzero
#  this is a more verbose version of set -o errexit
trap 'errexit' ERR
# setting errtrace allows our ERR trap handler to be propagated to functions,
#  expansions and subshells
set -o errtrace
set -eE
